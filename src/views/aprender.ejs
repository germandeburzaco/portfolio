


<!DOCTYPE html>
<html lang="es">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Oswald:wght@300;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/css/w3.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=PT+Sans:wght@400;700&display=swap" rel="stylesheet">

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta2/css/all.min.css">

    <link rel="stylesheet" href="/css/test.css">
    <link rel="stylesheet" href="/css/aprender.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/prism/1.25.0/themes/prism-okaidia.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/prism/9000.0.1/plugins/line-numbers/prism-line-numbers.css">
    
    <title>PORTFOLIO</title>
    <link rel="apple-touch-icon" sizes="180x180" href="/img/apple-touch-icon.png">
    <link rel="icon" type="image/png" sizes="32x32" href="/img/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="/img/favicon-16x16.png">
    <style>
        h1{
          font-family: 'PT Sans', sans-serif;
          display: block;
          font-size: 2em;
          margin-block-start: 0.67em;
          margin-block-end: 0.67em;
          margin-inline-start: 0px;
          margin-inline-end: 0px;
          font-weight: bold;
          margin-top: 0;
          margin-bottom: 0;
          font-size: 32px;
        }       

        .textoBlackMode span{
          color: green; 
          background-color: black; 
          width: 50px; 
          display:inline-flex; 
          justify-content: center
        }

        .accordion {
            background-color: #eee;
            color: #444;
            cursor: pointer;
            padding: 8px 18px;
            width: 100%;
            text-align: left;
            border: none;
            outline: none;
            transition: 0.4s;
        }

        /* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */
        .active,
        .accordion:hover {
            background-color: rgb(159, 167, 163);
        }

        /* Style the accordion panel. Note: hidden by default */
        .panel {
            padding: 0 18px;
            background-color: white;
            display: none;
            overflow: hidden;
        }

        .accordion:after {
            content: '\002B';
            color: #777;
            font-weight: bold;
            float: right;
            margin-left: 5px;
        }

        .active:after {
            content: "\2212";
        }

        pre.line-numbers {
          padding-left: 0;
        }
        
      </style>
</head>



<body id="elemBody" class="  modoOscuro modoClaro ">
  <header>
    <%- include ("partials/_heads") %>
  </header>
  <div class="contenedor">
    <div class="contenedorNavBar">
      <div>
        <p>QUE ES JS?</p>
      </div>
      <div>
        <p>TEMA1</p>
      </div>
      <div>
        <p>TEMA1</p>
      </div>
      <div>
        <p>TEMA1</p>
      </div>
      <div>
        <p>TEMA1</p>
      </div>    

    </div>
    <div style="background-color: var(--bkColor1Claro); margin-bottom: 65px;"> <!-- hijo2-->
      <div style="width: 80%; margin: 0 auto;">
        <p class="main-texto">Aprende <span class="main-nombre"> JS</span><span class="main-punto" id="main-punto">_</span>
        </p>      
      </div>

      
      <div class="container" style="width: 90%; margin: auto;">
        
        <h5 class="accordion" >QUE ES JS?</h5> <!--- JS -->
        <div class="panel">             
            <p class="contenedorCodigoVisualStudio explicaciones" >JavaScript fue creado para ‚Äúdar vida a las p√°ginas web‚Äù.<br>
              Los programas en este lenguaje se llaman scripts. Se pueden escribir directamente en el HTML de una p√°gina web y ejecutarse autom√°ticamente a medida que se carga la p√°gina.<br>
              Los scripts se proporcionan y ejecutan como texto plano. No necesitan preparaci√≥n especial o compilaci√≥n para correr.</p>          
        </div>

        <h5 class="accordion" >HOLA MUNDO</h5> <!--- HOLA MUNDO -->
        <div class="panel">  
          <div>
            <p class="contenedorCodigo explicaciones" >Tu primer Hola Mundo</p>            
              <div class="contenedorCodigo">
      <pre class="line-numbers">
      <code class="language-javascript ">                  
      console.log("Hola Mundo!")   // Hola mundo
      </code>
      </pre> 
              </div>  
          </div>
        </div>

        <h5 class="accordion" >TRABAJAR CON STRINGS</h5> <!--- HOLA MUNDO -->
        <div class="panel">  
          <div>
            <p class="contenedorCodigo explicaciones">Trabajando con STRINGS</p>  

            <div class="contenedorCodigo"><!--- LENGHT -->              
      <pre >
      <code id="primero" class="language-javascript ">   
var msg = "Hola mundo"               
msg.lenght() // 10             
msg.charAt(6) // m
msg.endsWith("o") // true
msg.includes("do") // true
msg.indexOf("do") // 8
msg.substring(0, 4); // "Hola"
msg.toUpperCase(); // "HOLA MUNDO"
msg.toLowerCase(); // "hola mundo"
msg.replace("mundo", "amigo"); // "Hola amigo"

var msg = "   Hola mundo   "; üåç
var trimmedMsg = msg.trim(); // "Hola mundo"

var msg = "Hola,mundo,cruel";
var parts = msg.split(","); // ["Hola", "mundo", "cruel"]

var slicedMsg = msg.slice(5, 10); // "mundo"

var msg = "Hola mundo, Hola todos";
var replacedMsg = msg.replace(/Hola/g, "Hi"); // "Hi mundo, Hi todos"

var msg = "Hola mundo, Hola todos";
var replacedMsg = msg.replace(/Hola/g, "Hi"); // "Hi mundo, Hi todos"

var str1 = "Hola";
var str2 = "mundo";
var result = str1.concat(" ", str2); // "Hola mundo"

var str = "JavaScript";
var unicodeValue = str.charCodeAt(0); // 74

var str = "42";
var paddedStr = str.padStart(5, "0"); // "00042"
      </code>
      </pre>                            
            </div>
                      

            

          </div>
        </div>

      </div>
           

    </div> <!-- fin hijo2-->
  </div> <!-- fin contenedor-->

  <footer>
    <div class="containterMain--redes">
      <ul class="redes">
        <a class="redes-items" href="https://twitter.com/GermanDaniG"><i class="fab fa-twitter"></i></a>
        <a class="redes-items" href="https://github.com/germandeburzaco"><i class="fab fa-github"></i></a>
        <a class="redes-items" href="https://codepen.io/GermanDaniG"><i class="fab fa-codepen"></i></a>
        <a class="redes-items" href="https://twitter.com/GermanDaniG"><i class="fas fa-envelope"></i></a>

      </ul>
    </div>
    <div class="footer-bajo">

    </div>
  </footer>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.25.0/prism.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.25.0/plugins/line-numbers/prism-line-numbers.min.js"></script>
  <script>
    window.addEventListener("load", () => {

        var db_learnJS 
        Prism.highlightAll();
      

        async function getData(){
            fetch('/files/db_learnJS.json')
            .then(response => response.json())
            .then(data => {
                    return data;
                })
                .catch(error => console.error('Error al cargar el archivo JSON:', error));
        }

        var db_learnJS =  getData()
        //console.log(db_learnJS)

        async function loadAndLogData() {
          try {
            db_learnJS = await getData();
            console.log(db_learnJS);
          } catch (error) {            
            console.error('Error al cargar y mostrar datos:', error);
          }
        }

        // Obtener el elemento del bloque de c√≥digo
        var codeElement = document.getElementById("primero");

        // Modificar el contenido
       // codeElement.textContent = "function nuevaFuncion() {\n      // Nuevo c√≥digo aqu√≠\n}";
       // Prism.highlightElement(codeElement);

        var iconoLight = document.getElementsByClassName("fa-moon")
        var iconoMenu = document.getElementById("iconoMenu")
       
    
        let puntos = document.getElementById("main-punto")
        let puntoTitulo = document.getElementById("puntoTitulo")
        const puntoIntermitente = () => {
            puntos.classList.toggle("main-punto-oculto")
            puntoTitulo.classList.toggle("main-punto-oculto")
            setTimeout(puntoIntermitente, 1000)
        }
        puntoIntermitente()

        iconoLight[0].addEventListener('click', (e) => {
        
            var btnModo = document.getElementById('btnModo')
            var elemBody = document.getElementById('elemBody')

            if (btnModo.value == `-Dark Mode-`) {
                iconoMenu.style.color = "#ffffff"
                btnModo.value = "-Light Mode-"
                elemBody.classList.toggle("modoClaro")
                modoClarov2.classList.toggle("modoOscurov2")
                iconoLight[0].classList.toggle("fa-sun")
                iconoLight[0].classList.toggle("fa-moon")
            } else {
                btnModo.value = "-Dark Mode-"
                iconoMenu.style.color = "#000000"
                elemBody.classList.toggle("modoClaro")
                modoClarov2.classList.toggle("modoOscurov2")
                iconoLight[0].classList.toggle("fa-sun")
                iconoLight[0].classList.toggle("fa-moon")
            }
        });

        iconoMenu.addEventListener("click", ()=>{
          document.getElementById('sidebar').classList.toggle('active');
        })

        var acc = document.getElementsByClassName("accordion");
        var i;

        for (i = 0; i < acc.length; i++) {
            acc[i].addEventListener("click", function () {
                /* Toggle between adding and removing the "active" class,
                to highlight the button that controls the panel */
                this.classList.toggle("active");

                /* Toggle between hiding and showing the active panel */
                var panel = this.nextElementSibling;
                if (panel.style.display === "block") {
                    panel.style.display = "none";
                } else {
                    panel.style.display = "block";
                }
            });
        }

    }) //FIN WINDOWS LOAD

  </script>
</body>

</html>